{
  "contractName": "ERC20Migrator",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "legacyToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "legacyToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ERC20Mintable",
          "name": "newToken",
          "type": "address"
        }
      ],
      "name": "beginMigration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "migrateAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"contract ERC20Mintable\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"beginMigration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"legacyToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"migrateAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"legacyToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"details\":\"This contract can be used to migrate an ERC20 token from one contract to another, where each token holder has to opt-in to the migration. To opt-in, users must approve for this contract the number of tokens they want to migrate. Once the allowance is set up, anyone can trigger the migration to the new token contract. In this way, token holders \\\"turn in\\\" their old balance and will be minted an equal amount in the new token. The new token contract must be mintable. For the precise interface refer to OpenZeppelin's ERC20Mintable, but the only functions that are needed are `isMinter(address)` and `mint(address, amount)`. The migrator will check that it is a minter for the token. The balance from the legacy token will be transfered to the migrator, as it is migrated, and remain there forever. Although this contract can be used in many different scenarios, the main motivation was to provide a way to migrate ERC20 tokens into an upgradeable version of it using ZeppelinOS. To read more about how this can be done using this implementation, please follow the official documentation site of ZeppelinOS: https://docs.zeppelinos.org/docs/erc20_onboarding.html Example of usage: ``` const migrator = await ERC20Migrator.new(legacyToken.address); await newToken.addMinter(migrator.address); await migrator.beginMigration(newToken.address); ```\",\"methods\":{\"beginMigration(address)\":{\"details\":\"Begins the migration by setting which is the new token that will be minted. This contract must be a minter for the new token.\",\"params\":{\"newToken\":\"the token that will be minted\"}},\"constructor\":{\"params\":{\"legacyToken\":\"address of the old token contract\"}},\"legacyToken()\":{\"details\":\"Returns the legacy token that is being migrated.\"},\"migrate(address,uint256)\":{\"details\":\"Transfers part of an account's balance in the old token to this contract, and mints the same amount of new tokens for that account.\",\"params\":{\"account\":\"whose tokens will be migrated\",\"amount\":\"amount of tokens to be migrated\"}},\"migrateAll(address)\":{\"details\":\"Transfers all of an account's allowed balance in the old token to this contract, and mints the same amount of new tokens for that account.\",\"params\":{\"account\":\"whose tokens will be migrated\"}},\"newToken()\":{\"details\":\"Returns the new token to which we are migrating.\"}},\"title\":\"ERC20Migrator\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/drafts/ERC20Migrator.sol\":\"ERC20Migrator\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzz-raw://4ca6617349a9b36fd82e9442a8e445ce9021a174e4399d1457ddc894ee3f5df3\",\"dweb:/ipfs/QmcmyB4cNazZ1sw963Afaijt67M9bDgwmGXCgQajGTD4tm\"]},\"/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x3199053db04cdae6c9b4380921a4a4ee720b568d6a9660883b29d25fbec31bc0\",\"urls\":[\"bzz-raw://1b0ff368e21d6007c06e4cfb286fe59d7d7d3ec06283300c9be2153ba11fa93a\",\"dweb:/ipfs/QmRPq2wZM4RAcbj31dP34GCr1CSy2qy3JqfXEkdVie4HLT\"]},\"/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/drafts/ERC20Migrator.sol\":{\"keccak256\":\"0xf7ad7103478e2827403d88ad787ed62240d3878be5b018291da50a57317a79c5\",\"urls\":[\"bzz-raw://369e46babdb5273a584b78f4890a0c27d2ed82314659ef907d015c48e3885377\",\"dweb:/ipfs/QmTxgktKEQCwmotNnYoJeE1A21FEdFtzkNFhHnmypac9Bp\"]},\"/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/math/Math.sol\":{\"keccak256\":\"0x37605dd0606b349cfb1b679892e1bb0ef4ddc16dedb06e229cc4402610a7a848\",\"urls\":[\"bzz-raw://c44b0c7fe0523f3f9a10d2924d7d7137b1349b1e71cd4be57550e185a098ca55\",\"dweb:/ipfs/QmbBLBCBPpqna3QZTiomSwyBdtt5Ua9DqkFgYicMd7Coya\"]},\"/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]},\"/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzz-raw://f40c91ca270bdc9b156f339081a0fc2bbcf73cf5f62b8c73ba555df753ff6619\",\"dweb:/ipfs/QmT8y2VVjGaFdGphpcXrgvdPi2EgF9LuCDgJiJ89LvpFRV\"]},\"/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xc4ca2883e0b0743604143952024c250bb13737ad54bb666b117efdcb766fe3a8\",\"urls\":[\"bzz-raw://bdaf72028f2dc29aa5191b2bfca315a9e3b1d58f900166bdb5ae5f500d569384\",\"dweb:/ipfs/QmZngPiWLXA9i2vp6XNPcGA23GHxT99V1Qma6iRivtbREy\"]},\"/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzz-raw://ee762ff5b7746e41d27dcbcea00c7a3034b58adb1b45ddadddb5b721aff450df\",\"dweb:/ipfs/QmdxqtgEFZjHCoiYyz6pUAQ5iBm7As25jcyEbZoTaAgyDa\"]},\"/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x7b8ac1266b66d7218a5f81ec381c3fd5cf55a6673369356c6e7c409fa21f987a\",\"urls\":[\"bzz-raw://7b0063d8f31296f787ba1b64b7e68b63e2e2ca53b77341be689ad7f83550b4f5\",\"dweb:/ipfs/QmV7ED65vpqJCKFxupqHSUJHJvPQGtQQt7P8Acwp9zZn17\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109173803806109178339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561007e57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610849806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063104d26141461005c57806313155455146100a05780635a8cadb1146100ea578063ad68ebf71461012e578063c42bd05a1461017c575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101c6565b005b6100a8610360565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61012c6004803603602081101561010057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610389565b005b61017a6004803603604081101561014457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610595565b005b6101846106cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461022157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561025b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663aa271e1a306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156102d857600080fd5b505afa1580156102ec573d6000803e3d6000fd5b505050506040513d602081101561030257600080fd5b810190808051906020019092919050505061031c57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561042957600080fd5b505afa15801561043d573d6000803e3d6000fd5b505050506040513d602081101561045357600080fd5b8101908080519060200190929190505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561053a57600080fd5b505afa15801561054e573d6000803e3d6000fd5b505050506040513d602081101561056457600080fd5b81019080805190602001909291905050509050600061058383836106f6565b905061058f8482610595565b50505050565b6105e38230836000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661070f909392919063ffffffff16565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b505050506040513d60208110156106b657600080fd5b8101908080519060200190929190505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008183106107055781610707565b825b905092915050565b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156107ca57600080fd5b505af11580156107de573d6000803e3d6000fd5b505050506040513d60208110156107f457600080fd5b810190808051906020019092919050505061080e57600080fd5b5050505056fea265627a7a72315820779206f243222b19fc82dc89e3a3895cbb90939e69488672488a6057ae464f6564736f6c634300050b0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063104d26141461005c57806313155455146100a05780635a8cadb1146100ea578063ad68ebf71461012e578063c42bd05a1461017c575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101c6565b005b6100a8610360565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61012c6004803603602081101561010057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610389565b005b61017a6004803603604081101561014457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610595565b005b6101846106cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461022157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561025b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663aa271e1a306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156102d857600080fd5b505afa1580156102ec573d6000803e3d6000fd5b505050506040513d602081101561030257600080fd5b810190808051906020019092919050505061031c57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561042957600080fd5b505afa15801561043d573d6000803e3d6000fd5b505050506040513d602081101561045357600080fd5b8101908080519060200190929190505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561053a57600080fd5b505afa15801561054e573d6000803e3d6000fd5b505050506040513d602081101561056457600080fd5b81019080805190602001909291905050509050600061058383836106f6565b905061058f8482610595565b50505050565b6105e38230836000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661070f909392919063ffffffff16565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b505050506040513d60208110156106b657600080fd5b8101908080519060200190929190505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008183106107055781610707565b825b905092915050565b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156107ca57600080fd5b505af11580156107de573d6000803e3d6000fd5b505050506040513d60208110156107f457600080fd5b810190808051906020019092919050505061080e57600080fd5b5050505056fea265627a7a72315820779206f243222b19fc82dc89e3a3895cbb90939e69488672488a6057ae464f6564736f6c634300050b0032",
  "sourceMap": "1622:2194:99:-;;;1916:136;8:9:-1;5:2;;;30:1;27;20:12;5:2;1916:136:99;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1916:136:99;;;;;;;;;;;;;;;;2006:1;1974:34;;1982:11;1974:34;;;;1966:43;;;;;;2034:11;2019:12;;:26;;;;;;;;;;;;;;;;;;1916:136;1622:2194;;;;;;",
  "deployedSourceMap": "1622:2194:99:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1622:2194:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2608:245;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2608:245:99;;;;;;;;;;;;;;;;;;;:::i;:::-;;2135:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3539:275;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3539:275:99;;;;;;;;;;;;;;;;;;;:::i;:::-;;3131:176;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3131:176:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2306:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2608:245;2711:1;2681:32;;2689:9;;;;;;;;;;;2681:32;;;2673:41;;;;;;2761:1;2732:31;;2740:8;2732:31;;;;2724:40;;;;;;2782:8;:17;;;2808:4;2782:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2782:32:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2782:32:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2782:32:99;;;;;;;;;;;;;;;;2774:41;;;;;;2838:8;2826:9;;:20;;;;;;;;;;;;;;;;;;2608:245;:::o;2135:88::-;2179:6;2204:12;;;;;;;;;;;2197:19;;2135:88;:::o;3539:275::-;3593:15;3611:12;;;;;;;;;;;:22;;;3634:7;3611:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3611:31:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3611:31:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3611:31:99;;;;;;;;;;;;;;;;3593:49;;3652:17;3672:12;;;;;;;;;;;:22;;;3695:7;3712:4;3672:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3672:46:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3672:46:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3672:46:99;;;;;;;;;;;;;;;;3652:66;;3728:14;3745:28;3754:7;3763:9;3745:8;:28::i;:::-;3728:45;;3783:24;3791:7;3800:6;3783:7;:24::i;:::-;3539:275;;;;:::o;3131:176::-;3198:61;3228:7;3245:4;3252:6;3198:12;;;;;;;;;;;:29;;;;:61;;;;;;:::i;:::-;3269:9;;;;;;;;;;;:14;;;3284:7;3293:6;3269:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3269:31:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3269:31:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3269:31:99;;;;;;;;;;;;;;;;;3131:176;;:::o;2306:82::-;2347:6;2372:9;;;;;;;;;;;2365:16;;2306:82;:::o;336:104:107:-;394:7;424:1;420;:5;:13;;432:1;420:13;;;428:1;420:13;413:20;;336:104;;;;:::o;538:151:123:-;646:5;:18;;;665:4;671:2;675:5;646:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;646:35:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;646:35:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;646:35:123;;;;;;;;;;;;;;;;638:44;;;;;;538:151;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../token/ERC20/IERC20.sol\";\nimport \"../token/ERC20/ERC20Mintable.sol\";\nimport \"../token/ERC20/SafeERC20.sol\";\nimport \"../math/Math.sol\";\n\n/**\n * @title ERC20Migrator\n * @dev This contract can be used to migrate an ERC20 token from one\n * contract to another, where each token holder has to opt-in to the migration.\n * To opt-in, users must approve for this contract the number of tokens they\n * want to migrate. Once the allowance is set up, anyone can trigger the\n * migration to the new token contract. In this way, token holders \"turn in\"\n * their old balance and will be minted an equal amount in the new token.\n * The new token contract must be mintable. For the precise interface refer to\n * OpenZeppelin's ERC20Mintable, but the only functions that are needed are\n * `isMinter(address)` and `mint(address, amount)`. The migrator will check\n * that it is a minter for the token.\n * The balance from the legacy token will be transfered to the migrator, as it\n * is migrated, and remain there forever.\n * Although this contract can be used in many different scenarios, the main\n * motivation was to provide a way to migrate ERC20 tokens into an upgradeable\n * version of it using ZeppelinOS. To read more about how this can be done\n * using this implementation, please follow the official documentation site of\n * ZeppelinOS: https://docs.zeppelinos.org/docs/erc20_onboarding.html\n * Example of usage:\n * ```\n * const migrator = await ERC20Migrator.new(legacyToken.address);\n * await newToken.addMinter(migrator.address);\n * await migrator.beginMigration(newToken.address);\n * ```\n */\ncontract ERC20Migrator {\n    using SafeERC20 for IERC20;\n\n    /// Address of the old token contract\n    IERC20 private _legacyToken;\n\n    /// Address of the new token contract\n    ERC20Mintable private _newToken;\n\n    /**\n     * @param legacyToken address of the old token contract\n     */\n    constructor (IERC20 legacyToken) public {\n        require(address(legacyToken) != address(0));\n        _legacyToken = legacyToken;\n    }\n\n    /**\n     * @dev Returns the legacy token that is being migrated.\n     */\n    function legacyToken() public view returns (IERC20) {\n        return _legacyToken;\n    }\n\n    /**\n     * @dev Returns the new token to which we are migrating.\n     */\n    function newToken() public view returns (IERC20) {\n        return _newToken;\n    }\n\n    /**\n     * @dev Begins the migration by setting which is the new token that will be\n     * minted. This contract must be a minter for the new token.\n     * @param newToken the token that will be minted\n     */\n    function beginMigration(ERC20Mintable newToken) public {\n        require(address(_newToken) == address(0));\n        require(address(newToken) != address(0));\n        require(newToken.isMinter(address(this)));\n\n        _newToken = newToken;\n    }\n\n    /**\n     * @dev Transfers part of an account's balance in the old token to this\n     * contract, and mints the same amount of new tokens for that account.\n     * @param account whose tokens will be migrated\n     * @param amount amount of tokens to be migrated\n     */\n    function migrate(address account, uint256 amount) public {\n        _legacyToken.safeTransferFrom(account, address(this), amount);\n        _newToken.mint(account, amount);\n    }\n\n    /**\n     * @dev Transfers all of an account's allowed balance in the old token to\n     * this contract, and mints the same amount of new tokens for that account.\n     * @param account whose tokens will be migrated\n     */\n    function migrateAll(address account) public {\n        uint256 balance = _legacyToken.balanceOf(account);\n        uint256 allowance = _legacyToken.allowance(account, address(this));\n        uint256 amount = Math.min(balance, allowance);\n        migrate(account, amount);\n    }\n}\n",
  "sourcePath": "/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/drafts/ERC20Migrator.sol",
  "ast": {
    "absolutePath": "/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/drafts/ERC20Migrator.sol",
    "exportedSymbols": {
      "ERC20Migrator": [
        11061
      ]
    },
    "id": 11062,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10913,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:99"
      },
      {
        "absolutePath": "/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "../token/ERC20/IERC20.sol",
        "id": 10914,
        "nodeType": "ImportDirective",
        "scope": 11062,
        "sourceUnit": 13880,
        "src": "25:35:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 10915,
        "nodeType": "ImportDirective",
        "scope": 11062,
        "sourceUnit": 13709,
        "src": "61:42:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "../token/ERC20/SafeERC20.sol",
        "id": 10916,
        "nodeType": "ImportDirective",
        "scope": 11062,
        "sourceUnit": 14024,
        "src": "104:38:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/math/Math.sol",
        "file": "../math/Math.sol",
        "id": 10917,
        "nodeType": "ImportDirective",
        "scope": 11062,
        "sourceUnit": 12182,
        "src": "143:26:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC20Migrator\n@dev This contract can be used to migrate an ERC20 token from one\ncontract to another, where each token holder has to opt-in to the migration.\nTo opt-in, users must approve for this contract the number of tokens they\nwant to migrate. Once the allowance is set up, anyone can trigger the\nmigration to the new token contract. In this way, token holders \"turn in\"\ntheir old balance and will be minted an equal amount in the new token.\nThe new token contract must be mintable. For the precise interface refer to\nOpenZeppelin's ERC20Mintable, but the only functions that are needed are\n`isMinter(address)` and `mint(address, amount)`. The migrator will check\nthat it is a minter for the token.\nThe balance from the legacy token will be transfered to the migrator, as it\nis migrated, and remain there forever.\nAlthough this contract can be used in many different scenarios, the main\nmotivation was to provide a way to migrate ERC20 tokens into an upgradeable\nversion of it using ZeppelinOS. To read more about how this can be done\nusing this implementation, please follow the official documentation site of\nZeppelinOS: https://docs.zeppelinos.org/docs/erc20_onboarding.html\nExample of usage:\n```\nconst migrator = await ERC20Migrator.new(legacyToken.address);\nawait newToken.addMinter(migrator.address);\nawait migrator.beginMigration(newToken.address);\n```",
        "fullyImplemented": true,
        "id": 11061,
        "linearizedBaseContracts": [
          11061
        ],
        "name": "ERC20Migrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10920,
            "libraryName": {
              "contractScope": null,
              "id": 10918,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14023,
              "src": "1657:9:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$14023",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1651:27:99",
            "typeName": {
              "contractScope": null,
              "id": 10919,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13879,
              "src": "1671:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$13879",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 10922,
            "name": "_legacyToken",
            "nodeType": "VariableDeclaration",
            "scope": 11061,
            "src": "1726:27:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$13879",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 10921,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13879,
              "src": "1726:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$13879",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10924,
            "name": "_newToken",
            "nodeType": "VariableDeclaration",
            "scope": 11061,
            "src": "1802:31:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
              "typeString": "contract ERC20Mintable"
            },
            "typeName": {
              "contractScope": null,
              "id": 10923,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13708,
              "src": "1802:13:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                "typeString": "contract ERC20Mintable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10943,
              "nodeType": "Block",
              "src": "1956:96:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10931,
                              "name": "legacyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10926,
                              "src": "1982:11:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$13879",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$13879",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 10930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1974:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1974:20:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2006:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1998:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1998:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1974:34:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10929,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15675,
                        15676
                      ],
                      "referencedDeclaration": 15675,
                      "src": "1966:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1966:43:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10938,
                  "nodeType": "ExpressionStatement",
                  "src": "1966:43:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10939,
                      "name": "_legacyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10922,
                      "src": "2019:12:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13879",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10940,
                      "name": "legacyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10926,
                      "src": "2034:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13879",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2019:26:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13879",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10942,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:26:99"
                }
              ]
            },
            "documentation": "@param legacyToken address of the old token contract",
            "id": 10944,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10926,
                  "name": "legacyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10944,
                  "src": "1929:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13879",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10925,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13879,
                    "src": "1929:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13879",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1928:20:99"
            },
            "returnParameters": {
              "id": 10928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1956:0:99"
            },
            "scope": 11061,
            "src": "1916:136:99",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10951,
              "nodeType": "Block",
              "src": "2187:36:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10949,
                    "name": "_legacyToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10922,
                    "src": "2204:12:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13879",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 10948,
                  "id": 10950,
                  "nodeType": "Return",
                  "src": "2197:19:99"
                }
              ]
            },
            "documentation": "@dev Returns the legacy token that is being migrated.",
            "id": 10952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "legacyToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2155:2:99"
            },
            "returnParameters": {
              "id": 10948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10947,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10952,
                  "src": "2179:6:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13879",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10946,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13879,
                    "src": "2179:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13879",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2178:8:99"
            },
            "scope": 11061,
            "src": "2135:88:99",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10959,
              "nodeType": "Block",
              "src": "2355:33:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10957,
                    "name": "_newToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10924,
                    "src": "2372:9:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "functionReturnParameters": 10956,
                  "id": 10958,
                  "nodeType": "Return",
                  "src": "2365:16:99"
                }
              ]
            },
            "documentation": "@dev Returns the new token to which we are migrating.",
            "id": 10960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2323:2:99"
            },
            "returnParameters": {
              "id": 10956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10955,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10960,
                  "src": "2347:6:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13879",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10954,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13879,
                    "src": "2347:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13879",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2346:8:99"
            },
            "scope": 11061,
            "src": "2306:82:99",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10998,
              "nodeType": "Block",
              "src": "2663:190:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10967,
                              "name": "_newToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10924,
                              "src": "2689:9:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                                "typeString": "contract ERC20Mintable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                                "typeString": "contract ERC20Mintable"
                              }
                            ],
                            "id": 10966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2681:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2681:18:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2711:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2703:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2703:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2681:32:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10965,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15675,
                        15676
                      ],
                      "referencedDeclaration": 15675,
                      "src": "2673:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2673:41:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10974,
                  "nodeType": "ExpressionStatement",
                  "src": "2673:41:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10977,
                              "name": "newToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10962,
                              "src": "2740:8:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                                "typeString": "contract ERC20Mintable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                                "typeString": "contract ERC20Mintable"
                              }
                            ],
                            "id": 10976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2732:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2732:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2761:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2753:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2753:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2732:31:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15675,
                        15676
                      ],
                      "referencedDeclaration": 15675,
                      "src": "2724:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:40:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10984,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:40:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10989,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15926,
                                "src": "2808:4:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Migrator_$11061",
                                  "typeString": "contract ERC20Migrator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Migrator_$11061",
                                  "typeString": "contract ERC20Migrator"
                                }
                              ],
                              "id": 10988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2800:7:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 10990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2800:13:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10986,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10962,
                            "src": "2782:8:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 10987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isMinter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9072,
                          "src": "2782:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 10991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2782:32:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15675,
                        15676
                      ],
                      "referencedDeclaration": 15675,
                      "src": "2774:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2774:41:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10993,
                  "nodeType": "ExpressionStatement",
                  "src": "2774:41:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10994,
                      "name": "_newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10924,
                      "src": "2826:9:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10995,
                      "name": "newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10962,
                      "src": "2838:8:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "src": "2826:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "id": 10997,
                  "nodeType": "ExpressionStatement",
                  "src": "2826:20:99"
                }
              ]
            },
            "documentation": "@dev Begins the migration by setting which is the new token that will be\nminted. This contract must be a minter for the new token.\n@param newToken the token that will be minted",
            "id": 10999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beginMigration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10962,
                  "name": "newToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10999,
                  "src": "2632:22:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10961,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13708,
                    "src": "2632:13:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2631:24:99"
            },
            "returnParameters": {
              "id": 10964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2663:0:99"
            },
            "scope": 11061,
            "src": "2608:245:99",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11023,
              "nodeType": "Block",
              "src": "3188:119:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11009,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11001,
                        "src": "3228:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11011,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15926,
                            "src": "3245:4:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$11061",
                              "typeString": "contract ERC20Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$11061",
                              "typeString": "contract ERC20Migrator"
                            }
                          ],
                          "id": 11010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3237:7:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3237:13:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11013,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11003,
                        "src": "3252:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11006,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10922,
                        "src": "3198:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13879",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13925,
                      "src": "3198:29:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$13879_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$13879_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 11014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3198:61:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11015,
                  "nodeType": "ExpressionStatement",
                  "src": "3198:61:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11019,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11001,
                        "src": "3284:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11020,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11003,
                        "src": "3293:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11016,
                        "name": "_newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10924,
                        "src": "3269:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 11018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13707,
                      "src": "3269:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:31:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11022,
                  "nodeType": "ExpressionStatement",
                  "src": "3269:31:99"
                }
              ]
            },
            "documentation": "@dev Transfers part of an account's balance in the old token to this\ncontract, and mints the same amount of new tokens for that account.\n@param account whose tokens will be migrated\n@param amount amount of tokens to be migrated",
            "id": 11024,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11001,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 11024,
                  "src": "3148:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3148:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11003,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11024,
                  "src": "3165:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3165:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3147:33:99"
            },
            "returnParameters": {
              "id": 11005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3188:0:99"
            },
            "scope": 11061,
            "src": "3131:176:99",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11059,
              "nodeType": "Block",
              "src": "3583:231:99",
              "statements": [
                {
                  "assignments": [
                    11030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11030,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 11059,
                      "src": "3593:15:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11029,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3593:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11035,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11033,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11026,
                        "src": "3634:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11031,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10922,
                        "src": "3611:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13879",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13853,
                      "src": "3611:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3611:31:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3593:49:99"
                },
                {
                  "assignments": [
                    11037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11037,
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 11059,
                      "src": "3652:17:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11036,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3652:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11045,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11040,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11026,
                        "src": "3695:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11042,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15926,
                            "src": "3712:4:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$11061",
                              "typeString": "contract ERC20Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$11061",
                              "typeString": "contract ERC20Migrator"
                            }
                          ],
                          "id": 11041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3704:7:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3704:13:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11038,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10922,
                        "src": "3672:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13879",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13862,
                      "src": "3672:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 11044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3672:46:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3652:66:99"
                },
                {
                  "assignments": [
                    11047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11047,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 11059,
                      "src": "3728:14:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11046,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3728:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11053,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11050,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11030,
                        "src": "3754:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11051,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11037,
                        "src": "3763:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11048,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12181,
                        "src": "3745:4:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$12181_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 11049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12148,
                      "src": "3745:8:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3745:28:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3728:45:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11055,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11026,
                        "src": "3791:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11056,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11047,
                        "src": "3800:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11054,
                      "name": "migrate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11024,
                      "src": "3783:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3783:24:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11058,
                  "nodeType": "ExpressionStatement",
                  "src": "3783:24:99"
                }
              ]
            },
            "documentation": "@dev Transfers all of an account's allowed balance in the old token to\nthis contract, and mints the same amount of new tokens for that account.\n@param account whose tokens will be migrated",
            "id": 11060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrateAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11026,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 11060,
                  "src": "3559:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3559:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3558:17:99"
            },
            "returnParameters": {
              "id": 11028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3583:0:99"
            },
            "scope": 11061,
            "src": "3539:275:99",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 11062,
        "src": "1622:2194:99"
      }
    ],
    "src": "0:3817:99"
  },
  "legacyAST": {
    "absolutePath": "/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/drafts/ERC20Migrator.sol",
    "exportedSymbols": {
      "ERC20Migrator": [
        11061
      ]
    },
    "id": 11062,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10913,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:99"
      },
      {
        "absolutePath": "/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "../token/ERC20/IERC20.sol",
        "id": 10914,
        "nodeType": "ImportDirective",
        "scope": 11062,
        "sourceUnit": 13880,
        "src": "25:35:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../token/ERC20/ERC20Mintable.sol",
        "id": 10915,
        "nodeType": "ImportDirective",
        "scope": 11062,
        "sourceUnit": 13709,
        "src": "61:42:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "../token/ERC20/SafeERC20.sol",
        "id": 10916,
        "nodeType": "ImportDirective",
        "scope": 11062,
        "sourceUnit": 14024,
        "src": "104:38:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/user/Desktop/nft-auction-dapp/contracts/openzeppelin-solidity/contracts/math/Math.sol",
        "file": "../math/Math.sol",
        "id": 10917,
        "nodeType": "ImportDirective",
        "scope": 11062,
        "sourceUnit": 12182,
        "src": "143:26:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC20Migrator\n@dev This contract can be used to migrate an ERC20 token from one\ncontract to another, where each token holder has to opt-in to the migration.\nTo opt-in, users must approve for this contract the number of tokens they\nwant to migrate. Once the allowance is set up, anyone can trigger the\nmigration to the new token contract. In this way, token holders \"turn in\"\ntheir old balance and will be minted an equal amount in the new token.\nThe new token contract must be mintable. For the precise interface refer to\nOpenZeppelin's ERC20Mintable, but the only functions that are needed are\n`isMinter(address)` and `mint(address, amount)`. The migrator will check\nthat it is a minter for the token.\nThe balance from the legacy token will be transfered to the migrator, as it\nis migrated, and remain there forever.\nAlthough this contract can be used in many different scenarios, the main\nmotivation was to provide a way to migrate ERC20 tokens into an upgradeable\nversion of it using ZeppelinOS. To read more about how this can be done\nusing this implementation, please follow the official documentation site of\nZeppelinOS: https://docs.zeppelinos.org/docs/erc20_onboarding.html\nExample of usage:\n```\nconst migrator = await ERC20Migrator.new(legacyToken.address);\nawait newToken.addMinter(migrator.address);\nawait migrator.beginMigration(newToken.address);\n```",
        "fullyImplemented": true,
        "id": 11061,
        "linearizedBaseContracts": [
          11061
        ],
        "name": "ERC20Migrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10920,
            "libraryName": {
              "contractScope": null,
              "id": 10918,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14023,
              "src": "1657:9:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$14023",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1651:27:99",
            "typeName": {
              "contractScope": null,
              "id": 10919,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13879,
              "src": "1671:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$13879",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 10922,
            "name": "_legacyToken",
            "nodeType": "VariableDeclaration",
            "scope": 11061,
            "src": "1726:27:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$13879",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 10921,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13879,
              "src": "1726:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$13879",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10924,
            "name": "_newToken",
            "nodeType": "VariableDeclaration",
            "scope": 11061,
            "src": "1802:31:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
              "typeString": "contract ERC20Mintable"
            },
            "typeName": {
              "contractScope": null,
              "id": 10923,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13708,
              "src": "1802:13:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                "typeString": "contract ERC20Mintable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10943,
              "nodeType": "Block",
              "src": "1956:96:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10931,
                              "name": "legacyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10926,
                              "src": "1982:11:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$13879",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$13879",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 10930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1974:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1974:20:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2006:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1998:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1998:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1974:34:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10929,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15675,
                        15676
                      ],
                      "referencedDeclaration": 15675,
                      "src": "1966:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1966:43:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10938,
                  "nodeType": "ExpressionStatement",
                  "src": "1966:43:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10939,
                      "name": "_legacyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10922,
                      "src": "2019:12:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13879",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10940,
                      "name": "legacyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10926,
                      "src": "2034:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13879",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2019:26:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13879",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10942,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:26:99"
                }
              ]
            },
            "documentation": "@param legacyToken address of the old token contract",
            "id": 10944,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10926,
                  "name": "legacyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10944,
                  "src": "1929:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13879",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10925,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13879,
                    "src": "1929:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13879",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1928:20:99"
            },
            "returnParameters": {
              "id": 10928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1956:0:99"
            },
            "scope": 11061,
            "src": "1916:136:99",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10951,
              "nodeType": "Block",
              "src": "2187:36:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10949,
                    "name": "_legacyToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10922,
                    "src": "2204:12:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13879",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 10948,
                  "id": 10950,
                  "nodeType": "Return",
                  "src": "2197:19:99"
                }
              ]
            },
            "documentation": "@dev Returns the legacy token that is being migrated.",
            "id": 10952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "legacyToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2155:2:99"
            },
            "returnParameters": {
              "id": 10948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10947,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10952,
                  "src": "2179:6:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13879",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10946,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13879,
                    "src": "2179:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13879",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2178:8:99"
            },
            "scope": 11061,
            "src": "2135:88:99",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10959,
              "nodeType": "Block",
              "src": "2355:33:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10957,
                    "name": "_newToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10924,
                    "src": "2372:9:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "functionReturnParameters": 10956,
                  "id": 10958,
                  "nodeType": "Return",
                  "src": "2365:16:99"
                }
              ]
            },
            "documentation": "@dev Returns the new token to which we are migrating.",
            "id": 10960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2323:2:99"
            },
            "returnParameters": {
              "id": 10956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10955,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10960,
                  "src": "2347:6:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13879",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10954,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13879,
                    "src": "2347:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13879",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2346:8:99"
            },
            "scope": 11061,
            "src": "2306:82:99",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10998,
              "nodeType": "Block",
              "src": "2663:190:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10967,
                              "name": "_newToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10924,
                              "src": "2689:9:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                                "typeString": "contract ERC20Mintable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                                "typeString": "contract ERC20Mintable"
                              }
                            ],
                            "id": 10966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2681:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2681:18:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2711:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2703:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2703:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2681:32:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10965,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15675,
                        15676
                      ],
                      "referencedDeclaration": 15675,
                      "src": "2673:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2673:41:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10974,
                  "nodeType": "ExpressionStatement",
                  "src": "2673:41:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 10977,
                              "name": "newToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10962,
                              "src": "2740:8:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                                "typeString": "contract ERC20Mintable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                                "typeString": "contract ERC20Mintable"
                              }
                            ],
                            "id": 10976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2732:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2732:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 10980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2761:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2753:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 10981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2753:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2732:31:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15675,
                        15676
                      ],
                      "referencedDeclaration": 15675,
                      "src": "2724:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:40:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10984,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:40:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 10989,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15926,
                                "src": "2808:4:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Migrator_$11061",
                                  "typeString": "contract ERC20Migrator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Migrator_$11061",
                                  "typeString": "contract ERC20Migrator"
                                }
                              ],
                              "id": 10988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2800:7:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 10990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2800:13:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10986,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10962,
                            "src": "2782:8:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 10987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isMinter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9072,
                          "src": "2782:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 10991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2782:32:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15675,
                        15676
                      ],
                      "referencedDeclaration": 15675,
                      "src": "2774:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2774:41:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10993,
                  "nodeType": "ExpressionStatement",
                  "src": "2774:41:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10994,
                      "name": "_newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10924,
                      "src": "2826:9:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10995,
                      "name": "newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10962,
                      "src": "2838:8:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "src": "2826:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "id": 10997,
                  "nodeType": "ExpressionStatement",
                  "src": "2826:20:99"
                }
              ]
            },
            "documentation": "@dev Begins the migration by setting which is the new token that will be\nminted. This contract must be a minter for the new token.\n@param newToken the token that will be minted",
            "id": 10999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beginMigration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10962,
                  "name": "newToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 10999,
                  "src": "2632:22:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10961,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13708,
                    "src": "2632:13:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2631:24:99"
            },
            "returnParameters": {
              "id": 10964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2663:0:99"
            },
            "scope": 11061,
            "src": "2608:245:99",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11023,
              "nodeType": "Block",
              "src": "3188:119:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11009,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11001,
                        "src": "3228:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11011,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15926,
                            "src": "3245:4:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$11061",
                              "typeString": "contract ERC20Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$11061",
                              "typeString": "contract ERC20Migrator"
                            }
                          ],
                          "id": 11010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3237:7:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3237:13:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11013,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11003,
                        "src": "3252:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11006,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10922,
                        "src": "3198:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13879",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13925,
                      "src": "3198:29:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$13879_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$13879_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 11014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3198:61:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11015,
                  "nodeType": "ExpressionStatement",
                  "src": "3198:61:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11019,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11001,
                        "src": "3284:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11020,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11003,
                        "src": "3293:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11016,
                        "name": "_newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10924,
                        "src": "3269:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$13708",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 11018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13707,
                      "src": "3269:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:31:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11022,
                  "nodeType": "ExpressionStatement",
                  "src": "3269:31:99"
                }
              ]
            },
            "documentation": "@dev Transfers part of an account's balance in the old token to this\ncontract, and mints the same amount of new tokens for that account.\n@param account whose tokens will be migrated\n@param amount amount of tokens to be migrated",
            "id": 11024,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11001,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 11024,
                  "src": "3148:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3148:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11003,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11024,
                  "src": "3165:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3165:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3147:33:99"
            },
            "returnParameters": {
              "id": 11005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3188:0:99"
            },
            "scope": 11061,
            "src": "3131:176:99",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11059,
              "nodeType": "Block",
              "src": "3583:231:99",
              "statements": [
                {
                  "assignments": [
                    11030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11030,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 11059,
                      "src": "3593:15:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11029,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3593:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11035,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11033,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11026,
                        "src": "3634:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11031,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10922,
                        "src": "3611:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13879",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13853,
                      "src": "3611:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3611:31:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3593:49:99"
                },
                {
                  "assignments": [
                    11037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11037,
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 11059,
                      "src": "3652:17:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11036,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3652:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11045,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11040,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11026,
                        "src": "3695:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11042,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15926,
                            "src": "3712:4:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$11061",
                              "typeString": "contract ERC20Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$11061",
                              "typeString": "contract ERC20Migrator"
                            }
                          ],
                          "id": 11041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3704:7:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3704:13:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11038,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10922,
                        "src": "3672:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13879",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13862,
                      "src": "3672:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 11044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3672:46:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3652:66:99"
                },
                {
                  "assignments": [
                    11047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11047,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 11059,
                      "src": "3728:14:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11046,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3728:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11053,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11050,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11030,
                        "src": "3754:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11051,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11037,
                        "src": "3763:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11048,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12181,
                        "src": "3745:4:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$12181_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 11049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12148,
                      "src": "3745:8:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3745:28:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3728:45:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11055,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11026,
                        "src": "3791:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11056,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11047,
                        "src": "3800:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11054,
                      "name": "migrate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11024,
                      "src": "3783:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3783:24:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11058,
                  "nodeType": "ExpressionStatement",
                  "src": "3783:24:99"
                }
              ]
            },
            "documentation": "@dev Transfers all of an account's allowed balance in the old token to\nthis contract, and mints the same amount of new tokens for that account.\n@param account whose tokens will be migrated",
            "id": 11060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrateAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11026,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 11060,
                  "src": "3559:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3559:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3558:17:99"
            },
            "returnParameters": {
              "id": 11028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3583:0:99"
            },
            "scope": 11061,
            "src": "3539:275:99",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 11062,
        "src": "1622:2194:99"
      }
    ],
    "src": "0:3817:99"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.18",
  "updatedAt": "2020-01-10T13:46:25.122Z",
  "devdoc": {
    "details": "This contract can be used to migrate an ERC20 token from one contract to another, where each token holder has to opt-in to the migration. To opt-in, users must approve for this contract the number of tokens they want to migrate. Once the allowance is set up, anyone can trigger the migration to the new token contract. In this way, token holders \"turn in\" their old balance and will be minted an equal amount in the new token. The new token contract must be mintable. For the precise interface refer to OpenZeppelin's ERC20Mintable, but the only functions that are needed are `isMinter(address)` and `mint(address, amount)`. The migrator will check that it is a minter for the token. The balance from the legacy token will be transfered to the migrator, as it is migrated, and remain there forever. Although this contract can be used in many different scenarios, the main motivation was to provide a way to migrate ERC20 tokens into an upgradeable version of it using ZeppelinOS. To read more about how this can be done using this implementation, please follow the official documentation site of ZeppelinOS: https://docs.zeppelinos.org/docs/erc20_onboarding.html Example of usage: ``` const migrator = await ERC20Migrator.new(legacyToken.address); await newToken.addMinter(migrator.address); await migrator.beginMigration(newToken.address); ```",
    "methods": {
      "beginMigration(address)": {
        "details": "Begins the migration by setting which is the new token that will be minted. This contract must be a minter for the new token.",
        "params": {
          "newToken": "the token that will be minted"
        }
      },
      "constructor": {
        "params": {
          "legacyToken": "address of the old token contract"
        }
      },
      "legacyToken()": {
        "details": "Returns the legacy token that is being migrated."
      },
      "migrate(address,uint256)": {
        "details": "Transfers part of an account's balance in the old token to this contract, and mints the same amount of new tokens for that account.",
        "params": {
          "account": "whose tokens will be migrated",
          "amount": "amount of tokens to be migrated"
        }
      },
      "migrateAll(address)": {
        "details": "Transfers all of an account's allowed balance in the old token to this contract, and mints the same amount of new tokens for that account.",
        "params": {
          "account": "whose tokens will be migrated"
        }
      },
      "newToken()": {
        "details": "Returns the new token to which we are migrating."
      }
    },
    "title": "ERC20Migrator"
  },
  "userdoc": {
    "methods": {}
  }
}